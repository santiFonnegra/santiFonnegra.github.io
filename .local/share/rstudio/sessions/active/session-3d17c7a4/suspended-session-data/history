# Proportions within each level of x-axis variable
# Here, marginal distribution of size given each vore
ggplot(msleep1, aes(x = vore, fill=size)) +
geom_bar(position="fill")
# Swap the position of the categorical variables
ggplot(msleep1, aes(x = size, fill=vore)) +
geom_bar(position="fill")
ggplot(msleep1, aes(x = vore))+
geom_bar(aes(y=sleep_total), stat="summary", fun=mean)
ggplot(msleep1, aes(x = vore, y = sleep_total))+
geom_bar(stat="summary",fun=mean)+
geom_errorbar(stat="summary", fun.data=mean_se, width=0.4)
ChickWeight <- as.data.frame(ChickWeight)
View(ChickWeight)
head(ChickWeight,10)
# your code goes below (make sure to edit comment)
distinct_chicks <- lenght(unique(ChickWeight$Chick))
# your code goes below (make sure to edit comment)
distinct_chicks <- length(unique(ChickWeight$Chick))
distinct_time <- length(unique(ChickWeight$Time))
distinct_diets <-lenght(unique(ChickWeight$Diet))
distinct_diets <-length(unique(ChickWeight$Diet))
chicks_per_diet_initial <- table(ChickWeight$Diet[ChickWeight$Time == 0])
library(ggplot2)
ggplot(ChickWeight, aes(x = Time, y = weight)) +
geom_point() +
labs(title = "Chick Weight Over Time", x = "Time (days)", y = "Weight (grams)")
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point() +
labs(title = "Chick Weight Over Time by Chick", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none")
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point(aes(color = NULL), color = "white") +
labs(title = "Chick Weight Over Time by Chick", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none")
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point(aes(color = NULL), color = "white") +
labs(title = "Chick Weight Over Time by Diet", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none") +
facet_wrap(~Diet)
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Diet))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Chick Weight Over Time with Linear Regression by Diet",
x = "Time (days)", y = "Weight (grams)")
max_time <- max(ChickWeight$Time)
avg_weight_last_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == last_time,], mean)
avg_weight_max_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,], mean)
# your code goes below (make sure to edit comment)
max_time <- max(ChickWeight$Time)
avg_weight_max_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,], mean)
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Average Weight (grams)", breaks = seq(0, 300, 25)) +
labs(title = "Average Chick Weight by Diet at the End of the Experiment")
ggplot(avg_weight_max_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Average Weight (grams)", breaks = seq(0, 300, 25)) +
labs(title = "Average Chick Weight by Diet at the End of the Experiment")
# your code goes below (make sure to edit comment)
avg_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, mean)
se_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, function(x) sd(x)/sqrt(length(x)))
ggplot(avg_weight_all_time[avg_weight_all_time$Time == max_time,], aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_max _time$weight), width = 0.5) +
ggplot(avg_weight_all_time[avg_weight_all_time$Time == max_time,], aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_max_time$weight), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars")
# your code goes below (make sure to edit comment)
avg_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, mean)
se_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, function(x) sd(x)/sqrt(length(x)))
ggplot(avg_weight_max_time[avg_weight_all_time$Time == max_time,], aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_max_time$weight), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars")
# your code goes below (make sure to edit comment)
avg_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, mean)
se_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, function(x) sd(x)/sqrt(length(x)))
ggplot(avg_weight_all_time[avg_weight_all_time$Time == last_time,], aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_all_time$weight), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars")
# your code goes below (make sure to edit comment)
avg_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, mean)
se_weight_all_time <- aggregate(weight ~ Diet + Time, data = ChickWeight, function(x) sd(x)/sqrt(length(x)))
ggplot(avg_weight_all_time[avg_weight_all_time$Time == max_time,], aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_all_time$weight), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars")
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == last_time,],
function(x) sd(x)/sqrt(length(x)))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,],
function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight_last_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,],
function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight_last_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
max_time <- max(ChickWeight$Time)
avg_weight_max_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,], mean)
ggplot(avg_weight_max_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Average Weight (grams)", breaks = seq(0, 300, 25)) +
labs(title = "Average Chick Weight by Diet at the End of the Experiment")
avg_weight_last_time <- aggregate(weight ~ Diet, data_last_time, mean)
# your code goes below (make sure to edit comment)
max_time <- max(ChickWeight$Time)
avg_weight_max_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,], mean)
ggplot(avg_weight_max_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Average Weight (grams)", breaks = seq(0, 300, 25)) +
labs(title = "Average Chick Weight by Diet at the End of the Experiment")
max_time <- max(ChickWeight$Time)
data_last_time <- ChickWeight[ChickWeight$Time == last_time,]
data_last_time <- ChickWeight[ChickWeight$Time == max_time,]
data_last_time <- ChickWeight[ChickWeight$Time == max_time,]
# your code goes below (make sure to edit comment)
max_time <- max(ChickWeight$Time)
data_last_time <- ChickWeight[ChickWeight$Time == max_time,]
avg_weight_max_time <- aggregate(weight ~ Diet, data = ChickWeight[ChickWeight$Time == max_time,], mean)
ggplot(avg_weight_max_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Average Weight (grams)", breaks = seq(0, 300, 25)) +
labs(title = "Average Chick Weight by Diet at the End of the Experiment")
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight_last_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight_max_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight__time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight__time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight__time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
last_time <- max(ChickWeight$Time)
data_last_time <- ChickWeight[ChickWeight$Time == last_time,]
# Compute average weight for each diet
avg_weight_last_time <- aggregate(weight ~ Diet, data_last_time, mean)
# Bar graph representing average chick weight for each diet
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
labs(title = "Average Chick Weight by Diet at Last Time Point",
x = "Diet",
y = "Average Weight (grams)") +
scale_y_continuous(breaks = seq(0, 300, 25))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight_time, by = "Diet", suffixes = c("_mean", "_se"))
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_max_time, se_weight_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
merged_data <- merge(avg_weight_last_time, se_weight_time, by = "Diet", suffixes = c("_mean", "_se"))
# your code goes below (make sure to edit comment)
# Replacing bars with points
ggplot(avg_weight_all_time[avg_weight_all_time$Time == last_time,], aes(x = as.factor(Diet), y = weight, color = as.factor(Diet))) +
geom_point(size = 4, color = "red") +
geom_errorbar(aes(ymin = weight - se_weight_all_time$weight, ymax = weight + se_weight_all_time$weight), width = 0.5) +
labs(title = "Average Chick Weight by Diet with Error Bars")
# your code goes below (make sure to edit comment)
# Comparing the mean weight of each Diet over Time
ggplot(avg_weight_all_time, aes(x = Time, y = weight, color = as.factor(Diet))) +
geom_point(shape = 4, size = 3) +  # Using 'x' symbols for points
geom_line(aes(group = Diet)) +
labs(title = "Mean Chick Weight Over Time by Diet")
# your code goes below (make sure to edit comment)
# Compute standard error for each diet
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
# Merge the average weight and standard error data
merged_data <- merge(avg_weight_last_time, se_weight_last_time, by = "Diet", suffixes = c("_mean", "_se"))
# Bar graph with error bars
ggplot(merged_data, aes(x = as.factor(Diet), y = weight_mean, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
scale_y_continuous(breaks = seq(0, 300, 25))
# your code goes below (make sure to edit comment)
ggplot(merged_data, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
theme_minimal()
# your code goes below (make sure to edit comment)
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# your code goes below (make sure to edit comment)
# Install the dplyr package (you only need to do this once)
install.packages("dplyr")
# Load the dplyr package
library(dplyr)
# Now, you can run the previous code to calculate avg_weight_all_time and plot for Question 9
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Scatter plot with error bars for Question 9
ggplot(avg_weight_all_time, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet Over Time with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
theme_minimal()
install.packages("dplyr")
# Scatter plot with error bars
ggplot(merged_data, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
theme_minimal()
# Scatter plot with error bars
ggplot(merged_data, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
theme_minimal()
# Scatter plot with error bars
# Calculate average weight for each diet over all time points
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Scatter plot with error bars
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Scatter plot with error bars
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Scatter plot with error bars
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
ggplot(avg_weight_all_time, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet Over Time with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
theme_minimal()
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Save dataset as a dataframe
ChickWeight <- as.data.frame(ChickWeight)
# Visualize the first ten rows of the dataset
head(ChickWeight,10)
# your code goes below (make sure to edit comment)
distinct_chicks <- length(unique(ChickWeight$Chick))
distinct_time <- length(unique(ChickWeight$Time))
distinct_diets <-length(unique(ChickWeight$Diet))
chicks_per_diet_initial <- table(ChickWeight$Diet[ChickWeight$Time == 0])
# Load package
library(ggplot2)
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight)) +
geom_point() +
labs(title = "Chick Weight Over Time", x = "Time (days)", y = "Weight (grams)")
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point() +
labs(title = "Chick Weight Over Time by Chick", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none")
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point(aes(color = NULL), color = "white") +
labs(title = "Chick Weight Over Time by Chick", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none")
max()
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Chick))) +
geom_line() +
geom_point(aes(color = NULL), color = "white") +
labs(title = "Chick Weight Over Time by Diet", x = "Time (days)", y = "Weight (grams)") +
theme(legend.position = "none") +
facet_wrap(~Diet)
# your code goes below (make sure to edit comment)
ggplot(ChickWeight, aes(x = Time, y = weight, color = as.factor(Diet))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Chick Weight Over Time with Linear Regression by Diet",
x = "Time (days)", y = "Weight (grams)")
# your code goes below (make sure to edit comment)
last_time <- max(ChickWeight$Time)
data_last_time <- ChickWeight[ChickWeight$Time == last_time,]
avg_weight_last_time <- aggregate(weight ~ Diet, data_last_time, mean)
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
labs(title = "Average Chick Weight by Diet at Last Time Point",
x = "Diet",
y = "Average Weight (grams)") +
scale_y_continuous(breaks = seq(0, 300, 25))
# your code goes below (make sure to edit comment)
# Compute standard error for each diet
se_weight_last_time <- aggregate(weight ~ Diet, data_last_time, function(x) sd(x)/sqrt(length(x)))
# Merge the average weight and standard error data
merged_data <- merge(avg_weight_last_time, se_weight_last_time, by = "Diet", suffixes = c("_mean", "_se"))
# Bar graph with error bars
ggplot(merged_data, aes(x = as.factor(Diet), y = weight_mean, fill = as.factor(Diet))) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
scale_fill_brewer(palette = "Pastel1") +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
scale_y_continuous(breaks = seq(0, 300, 25))
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
scale_fill_brewer(palette = "Pastel1")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)") +
scale_fill_brewer(palette = "Pastel1")
library(ggplot2)
# Ensure dplyr is loaded
library(dplyr)
# Calculate average weight and standard error for the last time point
avg_weight_last_time <- ChickWeight %>%
filter(Time == max(Time)) %>%
group_by(Diet) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# Plot
library(ggplot2)
ggplot(avg_weight_last_time, aes(x = as.factor(Diet), y = weight_mean)) +
geom_errorbar(aes(ymin = weight_mean - weight_se, ymax = weight_mean + weight_se), width = 0.5) +
geom_point(color = "red", size = 4) +
labs(title = "Average Chick Weight by Diet with Error Bars",
x = "Diet",
y = "Average Weight (grams)")
# your code goes below (make sure to edit comment)
ggplot(avg_weight_last_time, aes(x = Time, y = weight, color = as.factor(Diet))) +
geom_point(shape = 4, size = 3) +  # Using 'x' symbols for points
geom_line(aes(group = Diet)) +
labs(title = "Mean Chick Weight Over Time by Diet")
avg_weight_last_time <- ChickWeight %>%
# your code goes below (make sure to edit comment)
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()))
# your code goes below (make sure to edit comment)
# Calculate average weight over all time points for each diet
avg_weight_all_time <- ChickWeight %>%
group_by(Diet, Time) %>%
summarise(weight_mean = mean(weight, na.rm = TRUE),
weight_se = sd(weight, na.rm = TRUE) / sqrt(n()), .groups = 'drop')
# Plot
ggplot(avg_weight_all_time, aes(x = Time, y = weight_mean, color = as.factor(Diet))) +
geom_line() +
geom_point(aes(shape = as.factor(Diet))) +
scale_shape_manual(values = c(4, 5, 6, 8)) +  # Using different shapes for each diet
labs(title = "Average Chick Weight Over Time by Diet",
x = "Time (days)",
y = "Average Weight (grams)") +
theme(legend.position = "bottom")
library(haven)
MEAP93 <- read_dta("HW/MEAP93.DTA")
View(MEAP93)
names(MEAP93)
model <- lm(math10 ~ lexpend, data=MEAP93)
summary(model)
fitted_values <- fitted(model)
max(fitted_values)
plot(MEAP93$lexpend, MEAP93$math10, main="Scatterplot of math10 vs lexpend", xlab="lexpend", ylab="math10")
abline(model, col="red")
fitted_values <- fitted(model)
plot(MEAP93$expend, fitted_values, main="Scatterplot of Fitted Values vs expend", xlab="expend", ylab="Fitted Values")
MEAP93$math10 <- MEAP93$math10 / 100
new_model <- lm(math10 ~ lexpend, data=MEAP93)
summary(new_model)
library(ggplot2)
data(diamonds)
library(ggplot2)
data(diamonds)
diamonds<-as.data.frame(diamonds)
View(diamonds)
num_cells <- nrow(diamonds) * ncol(diamonds)
ggplot(data=dataset, aes(x=variable)) + geom_histogram()
ggplot(data=diamonds, aes(x=variable)) + geom_histogram()
ggplot(data=diamonds, aes(x=price)) + geom_histogram()
hist(dataset$variable)
hist(diamonds$price)
ggplot(data=diamonds, aes(x=cut)) + geom_bar()
barplot(table(diamonds$cut))
table(diamonds$cut)
ggplot(data=diamonds, aes(x=carat, y=price, color=clarity)) +
geom_point() + geom_smooth(method="lm")
ggplot(data=diamonds, aes(x=price, y=depth)) +
geom_point() + geom_smooth(method="lm")
ggplot(data=diamonds, aes(x=price, y=depth, color=clarity)) +
geom_point() + geom_smooth(method="lm")
ggplot(data=diamonds, aes(x=price)) + geom_histogram() + facet_wrap(~clarity)
ggplot(data=diamonds, aes(x=price)) + geom_histogram() + facet_wrap(~clarity, scales="free_y")
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(data=diamonds, aes(x=carat, y=volume)) +
geom_point() + geom_smooth(method="lm")
model <- lm(volume ~ carat, data=diamonds)
residuals <- residuals(model)
num_large_residuals <- sum(abs(residuals) > 500)
bases <- c("A", "T", "C", "A", "G", "A")
bases <- c("A", "T", "C", "A", "G", "A")
print(bases)
bases %in% c("A", "T")
sum(c(TRUE, FALSE, TRUE))
mean(c(TRUE, FALSE, TRUE))
sum(bases == "A")
mean(bases=="A")
sum(bases =
mean(bases=="A")
# Count the number of diamonds that meet all the specified criteria
num_diamonds <- sum(diamonds$cut %in% c("Ideal", "Premium") &
# Count the number of diamonds that meet all the specified criteria
num_diamonds <- sum(diamonds$cut %in% c("Ideal", "Premium") &
diamonds$color %in% c("D", "E") &
diamonds$clarity %in% c("IF", "VVS1"))
# Print the result
num_diamonds
carat_75th_percentile <- quantile(diamonds$carat, 0.75)
diamonds$fourC <- ifelse(diamonds$cut %in% c("Ideal", "Premium") &
diamonds$color %in% c("D", "E") &
diamonds$clarity %in% c("IF", "VVS1") &
diamonds$carat > carat_75th_percentile,
"yes", "no")
proportion_fourC_yes <- mean(diamonds$fourC == "yes")
proportion_fourC_yes
